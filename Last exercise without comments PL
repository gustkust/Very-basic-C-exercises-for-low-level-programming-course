#include <stdio.h>
#include <string.h>


struct student {
    char imie[16];
    char nazwisko[64];
    int nr_albumu;
};


struct ocena_z_programowania {
    int nr_albumu;
    char ocena[3];
};


struct ocena_z_fizyki {
    int nr_albumu;
    char ocena[3];
};


int str_to_int(char* (str)) {
    int  i = 0;
    int result = 0;
    while (str[i] > 37 && str[i] < 58) {
        result = result * 10 + (str[i] - '0');
        i++;
    }
    return result;
}


struct student opcja_N() {
    struct student nowy_student;
    printf("Podaj imie nowego studenta:\n>");
    scanf_s("%s", nowy_student.imie, 16);
    printf("Podaj nazwisko nowego studenta:\n>");
    scanf_s("%s", nowy_student.nazwisko, 64);
    printf("Podaj numer albumu nowego studenta:\n>");
    scanf_s("%d", &nowy_student.nr_albumu, 10);
    return nowy_student;
}


struct ocena_z_programowania opcja_O_P() {
    struct ocena_z_programowania nowa_ocena_z_programowania;
    printf("Podaj nowa ocene z programowania:\n>");
    scanf_s("%s", nowa_ocena_z_programowania.ocena, 3);
    printf("Podaj numer albumu:\n>");
    scanf_s("%d", &nowa_ocena_z_programowania.nr_albumu, 10);
    return nowa_ocena_z_programowania;
}


struct ocena_z_fizyki opcja_O_F() {
    struct ocena_z_fizyki nowa_ocena_z_fizyki;
    printf("Podaj nowa ocene z fizyki:\n>");
    scanf_s("%s", nowa_ocena_z_fizyki.ocena, 3);
    printf("Podaj numer albumu:\n>");
    scanf_s("%d", &nowa_ocena_z_fizyki.nr_albumu, 10);
    return nowa_ocena_z_fizyki;
}


void opcja_U_S(struct student* studenci, int N) {
    int indeks;
    int album_do_usuniecia;
    int byl_indeks = 0;
    printf("Podaj numer albumu usuwanego studenta:\n>");
    scanf_s("%d", &album_do_usuniecia, 10);
    for (indeks = 0; indeks < N; indeks++) {
        if (studenci[indeks].nr_albumu == album_do_usuniecia) {
            byl_indeks = 1;
            break;
        }
    }
    if (byl_indeks == 0) {
        printf("Podano bledny numer albumu.\n");
    }
    for (indeks = indeks; indeks < N; indeks++) {
        studenci[indeks] = studenci[indeks + 1];
    }
}


void opcja_U_P(struct ocena_z_programowania* oceny_z_programowania, int M) {
    int indeks;
    int album_do_usuniecia;
    int byl_indeks = 0;
    char ocena[3];
    printf("Podaj numer albumu:\n>");
    scanf_s("%d", &album_do_usuniecia, 10);
    printf("Podaj ocene:\n>");
    scanf_s("%s", ocena, 3);
    for (indeks = 0; indeks < M; indeks++) {
        if (oceny_z_programowania[indeks].nr_albumu == album_do_usuniecia && (strcmp(oceny_z_programowania[indeks].ocena, ocena) == 0)) {
            byl_indeks = 1;
            break;
        }
    }
    if (byl_indeks == 0) {
        printf("Podano bledny numer albumu lub ten student nie ma takiej oceny z programowania.\n");
    }
    for (indeks = indeks; indeks < M; indeks++) {
        oceny_z_programowania[indeks] = oceny_z_programowania[indeks + 1];
    }
}


void opcja_U_F(struct ocena_z_fizyki* oceny_z_fizyki, int K) {
    int indeks;
    int album_do_usuniecia;
    int byl_indeks = 0;
    char ocena[3];
    printf("Podaj numer albumu:\n>");
    scanf_s("%d", &album_do_usuniecia, 10);
    printf("Podaj ocene:\n>");
    scanf_s("%s", ocena, 3);
    for (indeks = 0; indeks < K; indeks++) {
        if (oceny_z_fizyki[indeks].nr_albumu == album_do_usuniecia && (strcmp(oceny_z_fizyki[indeks].ocena, ocena) == 0)) {
            byl_indeks = 1;
            break;
        }
    }
    if (byl_indeks == 0) {
        printf("Podano bledny numer albumu lub ten student nie ma takiej oceny z fizyki.\n");
    }
    for (indeks = indeks; indeks < K; indeks++) {
        oceny_z_fizyki[indeks] = oceny_z_fizyki[indeks + 1];
    }
}


void opcja_W(struct student* studenci, int N, struct ocena_z_programowania* oceny_z_programowania, int M, struct ocena_z_fizyki* oceny_z_fizyki, int K) {
    char nazwisko_do_pokazania[64];
    int i;
    int j;
    int byla_ocena = 0;
    int bylo_nazwisko = 0;
    printf("Podaj nazwisko studenta:\n>");
    scanf_s("%s", nazwisko_do_pokazania, 64);
    for (i = 0; i < N; i++) {
        if (strcmp(studenci[i].nazwisko, nazwisko_do_pokazania) == 0) {
            printf("\n");
            bylo_nazwisko = 1;
            printf("Imie: %s\n", studenci[i].imie);
            printf("Nazwisko: %s\n", studenci[i].nazwisko);
            printf("Numer albumu: %d\n", studenci[i].nr_albumu);
            printf("Oceny z programowania: ");
            for (j = 0; j < M; j++) {
                if (studenci[i].nr_albumu == oceny_z_programowania[j].nr_albumu) {
                    if (byla_ocena == 1) {
                        printf(", ");
                    }
                    printf("%s", oceny_z_programowania[j].ocena);
                    byla_ocena = 1;
                }
            }
            if (byla_ocena == 0) {
                printf("Brak.");
            }
            printf("\n");
            byla_ocena = 0;
            printf("Oceny z fizyki: ");
            for (j = 0; j < K; j++) {
                if (studenci[i].nr_albumu == oceny_z_fizyki[j].nr_albumu) {
                    if (byla_ocena == 1) {
                        printf(", ");
                    }
                    printf("%s", oceny_z_fizyki[j].ocena);
                    byla_ocena = 1;
                }
            }
            if (byla_ocena == 0) {
                printf("Brak.");
            }
            printf("\n");
            byla_ocena = 0;
        }
    }
    if (bylo_nazwisko == 1) printf("\nTo wszyscy studenci z tym nazwiskiem.");
    else printf("Nie ma studenta o takim nazwisku.");
    printf("\n");
}


void opcja_A(struct student* studenci, int N, struct ocena_z_programowania* oceny_z_programowania, int M, struct ocena_z_fizyki* oceny_z_fizyki, int K) {
    int album_do_pokazania;
    int i;
    int j;
    int byla_ocena = 0;
    int byl_album = 0;
    printf("Podaj numer albumu studenta:\n>");
    scanf_s("%d", &album_do_pokazania, 10);
    for (i = 0; i < N; i++) {
        if (studenci[i].nr_albumu == album_do_pokazania) {
            byl_album = 1;
            printf("Imie: %s\n", studenci[i].imie);
            printf("Nazwisko: %s\n", studenci[i].nazwisko);
            printf("Numer albumu: %d\n", studenci[i].nr_albumu);
            printf("Oceny z programowania: ");
            for (j = 0; j < M; j++) {
                if (studenci[i].nr_albumu == oceny_z_programowania[j].nr_albumu) {
                    if (byla_ocena == 1) {
                        printf(", ");
                    }
                    printf("%s", oceny_z_programowania[j].ocena);
                    byla_ocena = 1;
                }
            }
            if (byla_ocena == 0) {
                printf("Brak.");
            }
            printf("\n");
            byla_ocena = 0;
            printf("Oceny z fizyki: ");
            for (j = 0; j < K; j++) {
                if (studenci[i].nr_albumu == oceny_z_fizyki[j].nr_albumu) {
                    if (byla_ocena == 1) {
                        printf(", ");
                    }
                    printf("%s", oceny_z_fizyki[j].ocena);
                    byla_ocena = 1;
                }
            }
            if (byla_ocena == 0) {
                printf("Brak.");
            }
            break;
        }
    }
    if (byl_album == 0) printf("Nie ma studenta z takim numerem albumu.");
    printf("\n");
}


void opcja_Z(struct student* studenci, int N, struct ocena_z_programowania* oceny_z_programowania, int M, struct ocena_z_fizyki* oceny_z_fizyki, int K) {
    int i;
    char nazwa_pliku_studenci[100];
    printf("Podaj nazwe pliku, do ktorego zapisac studentow lub wpisz 0, by nie zapisywac danych:\n>");
    scanf_s("%s", nazwa_pliku_studenci, 100);
    if ((strcmp(nazwa_pliku_studenci, "0")) != 0) {
        FILE* plik_studenci;
        fopen_s(&plik_studenci, nazwa_pliku_studenci, "w");
        fprintf(plik_studenci, "%d\n", N);
        for (i = 0; i < N; i++) {
            fprintf(plik_studenci, "%s\n", studenci[i].imie);
            fprintf(plik_studenci, "%s\n", studenci[i].nazwisko);
            fprintf(plik_studenci, "%d\n", studenci[i].nr_albumu);
        }
        fclose(plik_studenci);
        printf("Zapisano studentow do pliku %s.\n", nazwa_pliku_studenci);
    }
    printf("\n");

    char nazwa_pliku_programowanie[100];
    printf("Podaj nazwe pliku, do ktorego zapisac oceny z programowania lub wpisz 0, by nie zapisywac danych:\n>");
    scanf_s("%s", nazwa_pliku_programowanie, 100);
    if ((strcmp(nazwa_pliku_programowanie, "0")) != 0) {
        FILE* plik_programowanie;
        fopen_s(&plik_programowanie, nazwa_pliku_programowanie, "w");
        fprintf(plik_programowanie, "%d\n", M);
        for (i = 0; i < M; i++) {
            fprintf(plik_programowanie, "%d\n", oceny_z_programowania[i].nr_albumu);
            fprintf(plik_programowanie, "%s\n", oceny_z_programowania[i].ocena);
        }
        fclose(plik_programowanie);
        printf("Zapisano oceny z programowania do pliku %s.\n", nazwa_pliku_programowanie);
    }
    printf("\n");

    char nazwa_pliku_fizyka[100];
    printf("Podaj nazwe pliku, do ktorego zapisac oceny z fizyki lub wpisz 0, by nie zapisywac danych:\n>");
    scanf_s("%s", nazwa_pliku_fizyka, 100);
    if ((strcmp(nazwa_pliku_fizyka, "0")) != 0) {
        FILE* plik_fizyka;
        fopen_s(&plik_fizyka, nazwa_pliku_fizyka, "w");
        fprintf(plik_fizyka, "%d\n", K);
        for (i = 0; i < K; i++) {
            fprintf(plik_fizyka, "%d\n", oceny_z_fizyki[i].nr_albumu);
            fprintf(plik_fizyka, "%s\n", oceny_z_fizyki[i].ocena);
        }
        fclose(plik_fizyka);
        printf("Zapisano oceny do pliku %s.\n", nazwa_pliku_fizyka);
    }
}


int main() {
    printf("Dzien dobry!\n\n");

    char nazwa_pliku_studenci[100];
    char linijka[128];
    int i;
    struct student studenci[50];
    int N;
    printf("Podaj nazwe pliku, z ktorego wczytac studentow lub wpisz 0, by nie wczytywac danych:\n>");
    scanf_s("%s", nazwa_pliku_studenci, 100);
    if ((strcmp(nazwa_pliku_studenci, "0")) != 0) {
        FILE* plik_studenci;
        fopen_s(&plik_studenci, nazwa_pliku_studenci, "r");
        while (plik_studenci == NULL) {
            printf("Podano bledna nazwe pliku. Sprobuj ponownie:\n");
            scanf_s("%s", nazwa_pliku_studenci, 100);
            fopen_s(&plik_studenci, nazwa_pliku_studenci, "r");
        }
        fscanf_s(plik_studenci, "%s", linijka, 128);
        N = str_to_int(linijka);
        for (i = 0; i < N; i++) {
            fscanf_s(plik_studenci, "%s", studenci[i].imie, 16);
            fscanf_s(plik_studenci, "%s", studenci[i].nazwisko, 64);
            fscanf_s(plik_studenci, "%d", &studenci[i].nr_albumu, 10);
        }
        fclose(plik_studenci);
        printf("Wczytano studentow z pliku %s.\n", nazwa_pliku_studenci);
    }
    else N = 0;
    printf("\n");

    char nazwa_pliku_programowanie[100];
    struct ocena_z_programowania oceny_z_programowania[50];
    int M;
    printf("Podaj nazwe pliku, z ktorego wczytac oceny z programowania lub wpisz 0, by nie wczytywac danych:\n>");
    scanf_s("%s", nazwa_pliku_programowanie, 100);
    if ((strcmp(nazwa_pliku_programowanie, "0")) != 0) {
        FILE* plik_programowanie;
        fopen_s(&plik_programowanie, nazwa_pliku_programowanie, "r");
        while (plik_programowanie == NULL) {
            printf("Podano bledna nazwe pliku. Sprobuj ponownie:\n");
            scanf_s("%s", nazwa_pliku_programowanie, 100);
            fopen_s(&plik_programowanie, nazwa_pliku_programowanie, "r");
        }
        fscanf_s(plik_programowanie, "%s", linijka, 128);
        M = str_to_int(linijka);
        for (i = 0; i < M; i++) {
            fscanf_s(plik_programowanie, "%d", &oceny_z_programowania[i].nr_albumu, 10);
            fscanf_s(plik_programowanie, "%s", oceny_z_programowania[i].ocena, 3);
        }
        fclose(plik_programowanie);
        printf("Wczytano oceny z programowania z pliku %s.\n", nazwa_pliku_programowanie);
    }
    else M = 0;
    printf("\n");

    char nazwa_pliku_fizyka[100];
    struct ocena_z_fizyki oceny_z_fizyki[50];
    int K;
    printf("Podaj nazwe pliku, z ktorego wczytac oceny z fizyki lub wpisz 0, by nie wczytywac danych:\n>");
    scanf_s("%s", nazwa_pliku_fizyka, 100);
    if ((strcmp(nazwa_pliku_fizyka, "0")) != 0) {
        FILE* plik_fizyka;
        fopen_s(&plik_fizyka, nazwa_pliku_fizyka, "r");
        while (plik_fizyka == NULL) {
            printf("Podano bledna nazwe pliku. Sprobuj ponownie:\n>");
            scanf_s("%s", nazwa_pliku_fizyka, 100);
            fopen_s(&plik_fizyka, nazwa_pliku_fizyka, "r");
        }
        fscanf_s(plik_fizyka, "%s", linijka, 128);
        K = str_to_int(linijka);
        for (i = 0; i < K; i++) {
            fscanf_s(plik_fizyka, "%d", &oceny_z_fizyki[i].nr_albumu, 10);
            fscanf_s(plik_fizyka, "%s", oceny_z_fizyki[i].ocena, 3);
        }
        fclose(plik_fizyka);
        printf("Wczytano oceny z fizyki z pliku %s.\n", nazwa_pliku_fizyka);
    }
    else K = 0;
    printf("\n");

    char spacja;
    char opcja;
    printf("Wybierz opcje:\nN - wprowadzenie nowego studenta.\n");
    printf("O - wprowadzenie nowej oceny.\nU - usuniecie studenta lub oceny.\n");
    printf("W - wyprowadzenie informacji o studencie na bazie nazwiska.\n");
    printf("A - wyprowadzenie informacji o studencie na bazie numeru albumu.\n");
    printf("Z - zapisanie danych do plikow.\nQ - wyjscie.\n>");
    scanf_s("%c", &opcja, 1);
    while (opcja != 'Q') {
        switch (opcja) {
        case 'N':
            printf("\n");
            studenci[N] = opcja_N();
            N++;
            for (i = 0; i < N - 1; i++) {
                if (studenci[N - 1].nr_albumu == studenci[i].nr_albumu) {
                    printf("Jest juz inny student o takim numerze albumu.\n");
                    N--;
                }
            }
            break;
        case 'O':
            printf("\n");
            printf("Wybierz:\nP - dodanie oceny z programowania.\nF - dodanie oceny z fizyki.\n>");
            scanf_s("%c%c", &spacja, 1, &opcja, 1);
            printf("\n");
            switch (opcja) {
            case 'P':
                oceny_z_programowania[M] = opcja_O_P();
                M++;
                break;
            case 'F':
                oceny_z_fizyki[K] = opcja_O_F();
                K++;
                break;
            }
            break;
        case 'U':
            printf("\n");
            printf("Wybierz:\nS - usuniecie studenta.\nP - usuniecie oceny z programowania.\nF - usuniecie oceny z fizyki.\n>");
            scanf_s("%c%c", &spacja, 1, &opcja, 1);
            printf("\n");
            switch (opcja) {
            case 'S':
                opcja_U_S(studenci, N);
                N--;
                break;
            case 'P':
                opcja_U_P(oceny_z_programowania, M);
                M--;
                break;
            case 'F':
                opcja_U_F(oceny_z_fizyki, K);
                K--;
                break;
            }
            break;
        case 'W':
            opcja_W(studenci, N, oceny_z_programowania, M, oceny_z_fizyki, K);
            break;
        case 'A':
            printf("\n");
            opcja_A(studenci, N, oceny_z_programowania, M, oceny_z_fizyki, K);
            break;
        case 'Z':
            printf("\n");
            opcja_Z(studenci, N, oceny_z_programowania, M, oceny_z_fizyki, K);
        }
        if (opcja == 'N' || opcja == 'O' || opcja == 'P' || opcja == 'F' || opcja == 'U' || opcja == 'S' || opcja == 'W' || opcja == 'A' || opcja == 'Z') {
            printf("Gotowe.\n\nWybierz opcje:\nN - wprowadzenie nowego studenta.\n");
            printf("O - wprowadzenie nowej oceny.\nU - usuniecie studenta lub oceny.\n");
            printf("W - wyprowadzenie informacji o studencie na bazie nazwiska.\n");
            printf("A - wyprowadzenie informacji o studencie na bazie numeru albumu.\n");
            printf("Z - zapisanie danych do plikow.\nQ - wyjscie.\n>");
        }
        scanf_s("%c", &opcja, 1);
    }
    printf("Do widzenia.\n");
    return 0;
}
